% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apni_utils.R
\name{apni-search}
\alias{apni-search}
\alias{apni_search}
\alias{apni_suggest}
\alias{apni_acceptable_names}
\title{Search Australian Plant Names Index}
\usage{
apni_search(q, ...)

apni_suggest(q, ...)

apni_acceptable_names(q, ...)
}
\arguments{
\item{q}{(character) one or more names to query. vectorized}

\item{...}{curl options passed on to \link[crul:verb-GET]{crul::verb-GET}.}
}
\value{
a list of lists, each with a slot for metadata (\code{meta})
with list of response attributes, and data (\code{data}) with a
data.frame of results
}
\description{
Search Australian Plant Names Index
}
\details{
\code{apni_search()} uses the \code{nsl/services/api/name/taxon-search}
route, and searches via exact match mor or less. \code{apni_suggest()} uses
the \code{nsl/services/suggest/acceptableName} route and does a fuzzy search.
\code{apni_acceptable_names()} uses the \code{nsl/services/api/name/acceptable-name}
route and does a similarly fuzzy search to suggest;
\code{apni_acceptable_names()} is used in \code{\link[=get_apni]{get_apni()}}
}
\examples{
\dontrun{
x <- apni_search(q = "Pinus")
x
x[[1]]$accepted_names
x[[1]]$synonyms
x[[1]]$synonyms$acceptedNameUsage
x[[1]]$meta$perPage
apni_search(q = c("Acacia", "Pinus"))

apni_suggest(c("Pinus clau", "Acacia ab"))
apni_acceptable_names(c("Pinus clau", "Acacia ab"))
apni_suggest("Acacia ab")
apni_acceptable_names("Acacia ab")

# acceptable names
apni_acceptable_names(q = 'Poa fax')
apni_acceptable_names(q = 'Poa fa')
apni_acceptable_names(q = 'Poa')
apni_acceptable_names(q = 'Acacia')
}
}
\references{
https://biodiversity.org.au/nsl/docs/main.html
}
\seealso{
Other apni: 
\code{\link{apni_children}()},
\code{\link{apni_classification}()},
\code{\link{apni_family}()},
\code{\link{apni_id}()},
\code{\link{get_apni}()}
}
\concept{apni}
